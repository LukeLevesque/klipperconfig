#****MACROS********

#####################################################################
# Print Operations - Macros
#####################################################################

[gcode_macro PRINT_START]
gcode: 
  # Parameters
    {% set BED_TEMP = params.BED_TEMP|default(60)|float%}
    {% set EXTRUDER_TEMP = params.HOTEND_TEMP|default(200)|float %}
  #load bed mesh profile
  BED_MESH_PROFILE LOAD=default
  #LEDs on
  LED_STRIP_ON
  # Start bed heating
  M140 S{BED_TEMP}
  M104 S{EXTRUDER_TEMP}   ; set hot end temperature
  # Use absolute coordinates
  G92 E0 ; Reset Extruder  
  G90
  G28 ; Home all axes
  

  # Wait for bed to reach temperature
  M190 S{BED_TEMP}

  # Set and wait for nozzle to reach temperature
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  ;G1 X0.1 Y20 Z30 F5000.0 ; Move to start position
  M109 S{EXTRUDER_TEMP}
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

[gcode_macro END_PRINT]
gcode:
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0

  # Move nozzle away from print while retracting
  G91 ; rel pos
  #G1 X-2 Y-2 E-3 F300
  G1 X-2 Y-2 F300
  
  # Raise nozzle by 10mm
  G1 Z10 F3000
  G90 ; absolute pos
  G1 X5 Y220 F3000 ;clear head and bring bed to the front
    
  # Disable steppers
  M84 X Y E;
  #LEDS OFF
  LED_STRIP_OFF

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  ##### set defaults #####
  {% set x = params.X|default(50) %}      #edit to your park position
  {% set y = params.Y|default(230) %}      #edit to your park position
  {% set z = params.Z|default(10)|float %} #edit to your park position
  {% set e = params.E|default(1) %}        #edit to your retract length
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{e} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}    
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### set defaults #####
  {% set e = params.E|default(1) %} #edit to your retract length
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{e} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z50 ;Raise Z more
  G90 ;Absolute positionning
  
  G1 X0 Y200 ;Present print
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  
  M84 X Y E ;Disable all steppers but Z


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
#####################################################################
# KlackEnder- Macros
#####################################################################

[gcode_macro PROBE_OUT]
gcode:
  G90
  G1 X245 F5000
  G4 P300
  G1 Z15
  G1 X0

[gcode_macro PROBE_IN]
gcode:
  G90
  G1 Z20
  G1 X245 F5000
  G1 Y0
  G1 Z0
  G4 P300
  G1 X220 F5000
  G1 Z10
  G1 X0

[gcode_macro AUTO_BED_MESH]
gcode:
  G28
  PROBE_OUT
  BED_MESH_CALIBRATE
  #G1 Y0 F20000
  PROBE_IN

[gcode_macro G29]
gcode:
  G28
  PROBE_OUT
  BED_MESH_CALIBRATE
  #G1 Y0 F20000
  PROBE_IN

[gcode_macro Accuracy_Test]
gcode:
  PROBE_OUT
  G90
  G1 Y120 X120 F20000
  PROBE_ACCURACY
  PROBE_IN



#####################################################################
# KlackEnder- Menu
#####################################################################

[menu __main]
type: list
name: Main

[menu __main __KlackEnder]
type: list
enable: True
name: KlackEnder

[menu __main __KlackEnder __ProbeOut]
type: command
name: Probe Out
gcode:
  PROBE_OUT

[menu __main __KlackEnder __ProbeIn]
type: command
name: Probe In
gcode:
  PROBE_IN

[menu __main __KlackEnder __AutoBedMesh]
type: command
name: Auto Bed Mesh
gcode:
  G28
  AUTO_BED_MESH



#####################################################################
# Power Management
#####################################################################



#Macro to shut off the tp_link smart plug. Useful for after prints. 
[gcode_macro SHUTDOWN_MACHINE]
gcode:
   {action_call_remote_method("shutdown_machine")}

[gcode_macro _SEND_POWER_OFF]:
gcode:
  {action_call_remote_method("set_device_power", device="plug", state="off")}


#Macro to turn on led_strip smart plug
[gcode_macro LED_STRIP_ON]:
gcode:
  {action_call_remote_method("set_device_power", device="led_strip", state="on")}

#Macro to turn off led_strip smart plug
[gcode_macro LED_STRIP_OFF]:
gcode:
  {action_call_remote_method("set_device_power", device="led_strip", state="off")}
#####################################################################
# Bed Leveling & Tramming
#####################################################################




#Screw Tilt Adjust Macro:
[gcode_macro SCREW_TILT_ADJUST]
#Home All Axis
gcode:
   G28
#klackender - get the probe
   PROBE_OUT
#Adjust Bed Level
   SCREWS_TILT_CALCULATE
#klackender probe back to home
   PROBE_IN

[gcode_macro _G29]
gcode:
  G28
  BED_MESH_CALIBRATE


[gcode_macro _BED_MESH_CALIBRATE]
gcode:
  #klackender - get the probe
  PROBE_OUT
  BED_MESH_CALIBRATE PROFILE= params.VALUE
  #klackender probe back to home
  PROBE_IN

#####################################################################
# Material Management macros
#####################################################################

[gcode_macro LOAD_PLA]
gcode:
   M117 Loading filament...
   {% if printer[printer.toolhead.extruder].temperature < 200.0 %}
   M117 Moving into position...
   G28
   G1 Z30 F3000
   M117 Heating hotend...
   M109 S200
   {%endif%}
   M117 Loading filament...
   M83                            ; set extruder to relative
   G1 E125 F150                  ; prime nozzle with filament
   G1 E-5 F50                     ; retract to prevent ooze
   M82                            ; set extruder to absolute
   G4 S90
   M104 S0; Set Hot-end to 0C    
   UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
   M117 Load Complete
   
    

[gcode_macro LOAD_PETG]
gcode:
   M117 Loading filament...
   {% if printer[printer.toolhead.extruder].temperature < 220.0 %}
   M117 Heating hotend for PETG...
   M109 S220
   {%endif%}
   M117 Moving into position...
   G28
   G1 Z30 F3000
   M117 Loading filament...
   M83                            ; set extruder to relative
   G1 E125 F150              ; prime nozzle with filament
   G1 E-5 F150                     ; retract to prevent ooze
   G4 S90
   M82                            ; set extruder to absolute
   M104 S0; Set Hot-end to 0C
   UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
   M117 Load Complete

[gcode_macro UNLOAD_PLA]
gcode:
  {% if printer[printer.toolhead.extruder].temperature < 200.0 %}
    M117 Heating hotend...
    M109 S200
  {% endif %}
  M117 Unloading filament...
  M83                            ; set extruder to relative
  G1 E-125 F200                 ; extrude a little to soften tip
  M82                            ; set extruder to absolute
  M104 S0; Set Hot-end to 0C
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  M117 Unload Complete

[gcode_macro UNLOAD_PETG]
gcode:
  {% if printer[printer.toolhead.extruder].temperature < 220.0 %}
    STATUS_HEATING
    M117 Heating hotend for PETG...
    M109 S220
  {% endif %}
  M117 Unloading filament...
  M83; set extruder to relative
  G1 E-15 F3000               ; Quick movement to get out of the melt zone  
  G1 E-250 F1000                 ; Retract rest of the way
  M400                           ; Wait for moves to finish
  M82                            ; set extruder to absolute
  M104 S0; Set Hot-end to 0C
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  M117 Unload Complete


#####################################################################
# Calibration and Testing macros
#####################################################################

[gcode_macro TEST_SPEED]
gcode:
  # Speed
  {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
  # Iterations
  {% set iterations = params.ITERATIONS|default(5)|int %}
  # Acceleration
  {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
  # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
  {% set bound = params.BOUND|default(20)|int %}
  # Size for small pattern box
  {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
  
  # Large pattern
    # Max positions, inset by BOUND
    {% set x_min = printer.toolhead.axis_minimum.x + bound %}
    {% set x_max = printer.toolhead.axis_maximum.x - bound %}
    {% set y_min = printer.toolhead.axis_minimum.y + bound %}
    {% set y_max = printer.toolhead.axis_maximum.y - bound %}
  
  # Small pattern at center
    # Find X/Y center point
    {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
    {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
    
    # Set small pattern box around center point
    {% set x_center_min = x_center - (smallpatternsize/2) %}
    {% set x_center_max = x_center + (smallpatternsize/2) %}
    {% set y_center_min = y_center - (smallpatternsize/2) %}
    {% set y_center_max = y_center + (smallpatternsize/2) %}

  # Save current gcode state (absolute/relative, etc)
  SAVE_GCODE_STATE NAME=TEST_SPEED
  
  # Output parameters to g-code terminal
  { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
  
  # Home and get position for comparison later:
    G28
    # QGL if not already QGLd (only if QGL section exists in config)
    {% if printer.configfile.settings.quad_gantry_level %}
      {% if printer.quad_gantry_level.applied == False %}
        QUAD_GANTRY_LEVEL
        G28 Z
      {% endif %}
    {% endif %} 
    G90
    G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
    G4 P1000 
    GET_POSITION

  # Go to starting position
  G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

  # Set new limits
  SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

  {% for i in range(iterations) %}
    # Large pattern
      # Diagonals
      G0 X{x_min} Y{y_min} F{speed*60}
      G0 X{x_max} Y{y_max} F{speed*60}
      G0 X{x_min} Y{y_min} F{speed*60}
      G0 X{x_max} Y{y_min} F{speed*60}
      G0 X{x_min} Y{y_max} F{speed*60}
      G0 X{x_max} Y{y_min} F{speed*60}
      
      # Box
      G0 X{x_min} Y{y_min} F{speed*60}
      G0 X{x_min} Y{y_max} F{speed*60}
      G0 X{x_max} Y{y_max} F{speed*60}
      G0 X{x_max} Y{y_min} F{speed*60}
    
    # Small pattern
      # Small diagonals 
      G0 X{x_center_min} Y{y_center_min} F{speed*60}
      G0 X{x_center_max} Y{y_center_max} F{speed*60}
      G0 X{x_center_min} Y{y_center_min} F{speed*60}
      G0 X{x_center_max} Y{y_center_min} F{speed*60}
      G0 X{x_center_min} Y{y_center_max} F{speed*60}
      G0 X{x_center_max} Y{y_center_min} F{speed*60}
      
      # Small box
      G0 X{x_center_min} Y{y_center_min} F{speed*60}
      G0 X{x_center_min} Y{y_center_max} F{speed*60}
      G0 X{x_center_max} Y{y_center_max} F{speed*60}
      G0 X{x_center_max} Y{y_center_min} F{speed*60}
  {% endfor %}

  # Restore max speed/accel/accel_to_decel to their configured values
  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

  # Re-home and get position again for comparison:
    G28
    # Go to XY home positions (in case your homing override leaves it elsewhere)
    G90
    G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
    G4 P1000 
    GET_POSITION

  # Restore previous gcode state (absolute/relative, etc)
  RESTORE_GCODE_STATE NAME=TEST_SPEED

#####################################################################
# MISC macros
#####################################################################

[delayed_gcode _CLEAR_DISPLAY]
gcode:
   M117
# Override M117 to also show in console
[gcode_macro _M117]
gcode:
   M117 {rawparams}
   {action_respond_info(rawparams)}

[gcode_macro _M0]
gcode:
  PAUSE

[gcode_macro _M205]
gcode:

[gcode_macro _M201]
gcode:

[gcode_macro _M203]
gcode:


[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}






